#include<stdio.h>

void merge(int a[], int l, int m, int r){
    int leftSize = m - l + 1;
    int rightSize = r - m;
    int tempLeft[leftSize];
    int tempRight[rightSize];
    for(int i = 0; i < leftSize; i++){
        tempLeft[i] = a[l+i];
    }
    for(int i = 0; i < rightSize; i++){
        tempRight[i] = a[m+1+i];
    }
    int pl = 0, pr = 0, pt = l;
    while(pl < leftSize && pr < rightSize){
        if(tempLeft[pl] < tempRight[pr]){
            a[pt] = tempLeft[pl];
            pl++;
            pt++;
        }else{
            a[pt] = tempRight[pr];
            pr++;
            pt++;
        }
    }
    
    while(pl < leftSize){
        a[pt] = tempLeft[pl];
        pl++;
        pt++;
    }
    
    while(pr < rightSize){
        a[pt] = tempRight[pr];
        pr++;
        pt++;
    }
}

void mergesort(int a[], int l, int r){
    if(l >= r)return;
    
    int m = l + (r-l)/2;
    mergesort(a, l, m);
    mergesort(a, m+1, r);
    merge(a, l, m, r);
}

int main(){
    int N;
    scanf("%d", &N);
    int a[N];
    for(int i = 0; i < N; i++){
        scanf("%d", &a[i]);
    }
    mergesort(a, 0, N-1);
    
    double median;
    int mid = N / 2;
    if(N % 2 == 0){
        median = (double) (a[mid] + a[mid-1]) / 2;
    }else{
        median = (double)a[mid];
    }
    
    printf("%.1lf", median);
    
    return 0;
}
